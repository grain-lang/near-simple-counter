/* grainc-flags --no-gc --no-pervasives */

import WasmI32, {
  add as (+),
  sub as (-)
} from "runtime/unsafe/wasmi32"
import WasmI64 from "runtime/unsafe/wasmi64"

import Env from "./nearEnv"
import { setCounter, loadCounter, _VAL_LEN, _VAL_PTR } from "./counter"

export let increment = () => {
  setCounter(loadCounter() + 1n)
}

export let decrement = () => {
  setCounter(loadCounter() - 1n)
}

export let getCounter = () => {
  // Write the value of the counter to memory
  loadCounter()
  // Tell host the location and length of the value
  Env.valueReturn(WasmI64.extendI32S(_VAL_LEN), WasmI64.extendI32S(_VAL_PTR))
}
